local druid = require("druid.druid")

function init(self)
	msg.post(".", "acquire_input_focus")

	msg.post("/multiplayer", "register")

 	self.druid = druid.new(self)
	self.find_button = self.druid:new_button("find", function() 
		gui.set_text(gui.get_node("find_label"), "Searching...")
		msg.post("/multiplayer", "find_servers")
		gui.set_enabled(gui.get_node("find"), false)
	end)

	self.send_button = self.druid:new_button("send", function() 
		print('send')
	end)
	self.buttons = {}
end

function final(self)
	self.druid:final()
	msg.post(".", "release_input_focus")
end

function update(self, dt)
    self.druid:update(dt)
end

function on_input(self, action_id, action)
    return self.druid:on_input(action_id, action)
end

function on_message(self, message_id, message)
	if message_id == hash("log") then
		-- gui.set_text(gui.get_node("label"), message.data)
	elseif message_id == hash("ip_discovery") then
		local servers = ""
		for k, v in pairs(self.buttons) do 
			self.druid:remove(v)
			gui.delete_node(k)
			self.buttons[k] = nil
		end

		local count = 0

		for ip, _ in pairs(message.servers) do
			local prefab = gui.clone_tree(gui.get_node("prefab"))
			local button = prefab["prefab"]
			local druid_button = self.druid:new_button(button, function() print("click", ip) end)
			local position = gui.get_position(gui.get_node("prefab")) + vmath.vector3(0, -100 * count, 0)
			print(position)

			gui.set_text(prefab["text"], ip)
			gui.set_position(button, position)
			gui.set_enabled(button, true)

			self.buttons[button] = druid_button
			count = count + 1
		end

		print("[client_gui]", servers)
		gui.set_text(gui.get_node("label"), servers)
	end
end