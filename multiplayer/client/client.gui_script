local druid = require("druid.druid")

function init(self)
	msg.post(".", "acquire_input_focus")

	-- msg.post("/multiplayer", "register")
	-- msg.post("/virtual_gamepad", "register")

	self.druid = druid.new(self)
	self.find_button = self.druid:new_button("find", function()
		msg.post("client", "find_servers")
		gui.set_enabled(gui.get_node("find"), false)
	end)

	self.buttons = {}
end

function final(self)
	self.druid:final()
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	self.druid:update(dt)
end

function on_input(self, action_id, action)
	return self.druid:on_input(action_id, action)
end

local function clear_server_list(self)
	for node, druid_button in pairs(self.buttons) do
		self.druid:remove(druid_button)
		gui.delete_node(node)
		self.buttons[node] = nil
	end
end

local function add_server_button(self, ip, order)
	local prefab = gui.clone_tree(gui.get_node("prefab"))
	local button = prefab["prefab"]
	local druid_button = self.druid:new_button(button, function()
		clear_server_list(self)
		gui.set_enabled(gui.get_node("server_list"), false)
		msg.post("client", "connect", { ip = ip })
	end)
	local position = gui.get_position(gui.get_node("prefab")) + vmath.vector3(0, -100 * order, 0)
	gui.set_text(prefab["text"], ip)
	gui.set_position(button, position)
	gui.set_enabled(button, true)

	self.buttons[button] = druid_button
end

function on_message(self, message_id, message)
	if message_id == hash("ip_discovery") then
		print("gui - ip_discovery")
		clear_server_list(self)
		local count = 0
		for ip, _ in pairs(message.servers) do
			add_server_button(self, ip, count)
			count = count + 1
		end
	end
end
